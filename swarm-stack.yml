version: "3.7"

services:
  rpg-api:
    image: definya/definya-team:api-latest
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
      - "${SOCKET_PORT}:${SOCKET_PORT}"
    environment:
      FORCE_COLOR: "true"
      VIRTUAL_HOST: ${API_SUBDOMAIN}
      LETSENCRYPT_HOST: ${API_SUBDOMAIN}
      LETSENCRYPT_EMAIL: ${ADMIN_EMAIL}
      VIRTUAL_PORT: ${SERVER_PORT}
      CHOKIDAR_USEPOLLING: "true"
      NEW_RELIC_LICENSE_KEY: "${NEW_RELIC_LICENSE_KEY}"
      NEW_RELIC_APP_NAME: "Definya API"
    networks:
      - rpg-network
    configs:
      - source: rpg-env
        target: .env
    env_file:
      - .env

  rpg-db:
    image: mongo
    command: mongod --port ${MONGO_PORT}
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - rpg-db-data:/data/db
      - ./docker_scripts/:/docker-entrypoint-initdb.d
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    deploy: # db should be only on the manager node
      placement:
        constraints:
          - node.role == manager
    networks:
      - rpg-network
    configs:
      - source: rpg-env
        target: .env
    env_file:
      - .env

  rpg-redis:
    image: redis:latest
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - rpg-redis-data:/data
      - ./config/redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf", "--port", "${REDIS_PORT}"]
    networks:
      - rpg-network
    configs:
      - source: rpg-env
        target: .env
    env_file:
      - .env

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./temp-dns.definya.com.conf:/etc/nginx/vhost.d/temp-dns.definya.com:ro
    networks:
      - rpg-network
    labels:
      com.github.nginx-proxy.nginx: "true"

  # ACME Companion Service
  acme-companion:
    image: nginxproxy/acme-companion
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html

    networks:
      - rpg-network
    environment:
      DEFAULT_EMAIL: admin@definya.com
      NGINX_DOCKER_GEN_CONTAINER: docker-gen
      NGINX_PROXY_CONTAINER: nginx-proxy

  docker-gen:
    image: jwilder/docker-gen
    labels:
      com.github.nginx-proxy.docker-gen: "true"
networks:
  rpg-network:
    driver: overlay

configs:
  rpg-env:
    file: .env

volumes:
  rpg-db-data:
  rpg-redis-data:
  # nginx-proxy
  conf:
  vhost:
  html:
  dhparam:
  certs:
  acme:
