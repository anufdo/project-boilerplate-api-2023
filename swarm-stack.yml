version: "3.7"

services:
  rpg-api:
    image: definya/definya-team:api-latest
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      labels:
        # Basic setup for API
        - traefik.enable=true
        - traefik.http.routers.rpg-api.rule=Host(`temp-na.definya.com`)
        - traefik.http.routers.rpg-api.entrypoints=websecure
        - traefik.http.routers.rpg-api.tls.certresolver=myresolver
        - traefik.http.services.rpg-api-service.loadbalancer.server.port=5002
        - traefik.http.routers.rpg-api.service=rpg-api-service

        # Websockets
        - traefik.http.routers.rpg-api-socket.rule=Host(`temp-na.definya.com`) && Path(`/socket.io/`)
        - traefik.http.routers.rpg-api-socket.entrypoints=websecure
        - traefik.http.routers.rpg-api-socket.tls.certresolver=myresolver
        - traefik.http.services.rpg-api-socket-service.loadbalancer.server.port=5101
        - traefik.http.routers.rpg-api-socket.service=rpg-api-socket-service

        # add sticky session for websockets
        - "traefik.http.services.rpg-api-service.loadbalancer.sticky=true"
        - "traefik.http.services.rpg-api-service.loadbalancer.sticky.cookie.name=StickyCookie"
        - "traefik.http.services.rpg-api-service.loadbalancer.sticky.cookie.secure=true"
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      FORCE_COLOR: "true"
      CHOKIDAR_USEPOLLING: "true"
      NEW_RELIC_LICENSE_KEY: "${NEW_RELIC_LICENSE_KEY}"
      NEW_RELIC_APP_NAME: "Definya API"
    networks:
      - rpg-network
    configs:
      - source: rpg-env
        target: .env
    env_file:
      - .env

  rpg-db:
    image: mongo
    command: mongod --port ${MONGO_PORT}
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - rpg-db-data:/data/db
      - ./docker_scripts/:/docker-entrypoint-initdb.d
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    deploy: # db should be only on the manager node
      placement:
        constraints:
          - node.role == manager
    networks:
      - rpg-network
    configs:
      - source: rpg-env
        target: .env
    env_file:
      - .env

  rpg-redis:
    image: redis:latest
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - rpg-redis-data:/data
      - ./config/redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf", "--port", "${REDIS_PORT}"]
    networks:
      - rpg-network
    configs:
      - source: rpg-env
        target: .env
    env_file:
      - .env

  traefik:
    image: traefik:v2.4
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
    command:
      # Basic setup
      - --api
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Setup SSL
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=admin@definya.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      # Redirect HTTP to HTTPS
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      # Logging & Debugging
      - --accesslog=true
      - --accesslog.filepath=./traeffik-logfile.log
      - --log.level=DEBUG
    ports:
      - "80:80"
      - "443:443"
      - "5003:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      - rpg-network
      - public
    labels:
      - traefik.enable=true
      # Dashboard router
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.definya.com`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=myresolver"
      - traefik.http.services.traefik-dashboard.loadbalancer.server.port=5003

networks:
  rpg-network:
    driver: overlay
  public:
    external: true

configs:
  rpg-env:
    file: .env

volumes:
  rpg-db-data:
  rpg-redis-data:
