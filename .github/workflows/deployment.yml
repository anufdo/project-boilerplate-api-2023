# Deploys to production when a commit is pushed to the production branch.

name: Deploy to Production
on:
  push:
    branches:
      - release
  pull_request:
    branches: ["release"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn" # or 'npm' | 'pnpm'

      # Runs a single command using the runners shell
      - name: Switch to Prod
        run: yarn env:switch:prod

      - name: Recreate .env file from secrets
        run: echo "${{ secrets.API_ENV }}" > .env

      - name: Run install
        run: yarn install
      - name: Run typescript and linter
        run: yarn tsc && yarn lint
      - name: Run formatter
        run: yarn format
      - name: Run update shared-deps
        run: yarn update:shared-deps

      - name: Login to Docker
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t definya/definya-team:api-latest .
          docker push definya/definya-team:api-latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            docker pull definya/definya-team:api-latest:latest
            docker run -d definya/definya-team:api-latest:latest
      - name: Restart nginx-proxy on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} 'docker-compose -f ./nginx-proxy/docker-compose.yml restart nginx-proxy'
