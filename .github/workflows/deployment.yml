# Deploys to production when a commit is pushed to the production branch.

name: Deploy to Production
on:
  push:
    branches:
      - release

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 16.10.0
          cache: "yarn" # or 'npm' | 'pnpm'

      - name: Prepare for a docker build
        run: |
          yarn env:switch:prod
          echo "${{ secrets.API_ENV }}" > .env
          # yarn install
          # yarn tsc && yarn lint

      - name: Login to Docker
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t definya/definya-team:api-latest .
          docker push definya/definya-team:api-latest
          docker build -t definya/definya-team:nginx-proxy-latest ./nginx-proxy
          docker push definya/definya-team:nginx-proxy-latest

      - name: Deploy to VPS and Restart nginx-proxy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_KEY }}
          passphrase: ${{ secrets.VPS_PASSPHRASE }}
          script: |
            docker pull definya/definya-team:api-latest:latest
            docker run -d definya/definya-team:api-latest:latest
            docker pull definya/definya-team:nginx-proxy-latest:latest
            docker run -d definya/definya-team:nginx-proxy-latest:latest

            docker-compose -f ./nginx-proxy/docker-compose.yml up -d
